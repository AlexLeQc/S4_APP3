#Essaie 2
.data #rentrer tes données

arr: .half 3,2,1,5,4,6,8

#ARRAY_SIZE
.eqv N 7 


.text	#debut des fonctions


.globl main


main:

	la $a0, arr 	#argument 1
	li $a1, N	#argument 2
	jal bubbleSort	#appel de la fonction
	
	li, $v0, 10
	syscall
	
	



swap:	#*xp, *yp

	#prendre les valeurs
	lh $t4, 0($a0)
	lh $t5, 0($a1)
	#échanger les valeurs
	sh $t4, 0($a1)
	sh $t5, 0($a0)
	
	jr $ra


bubbleSort:

	subiu $sp, $sp, 24
	sw $ra, 0($sp)
	sw $s1, 4($sp)
	sw $s2, 8($sp)
	sw $s3, 12($sp)
	sw $s4, 16($sp)
	sw $s5, 20($sp)
	
	#lh $s0, $a0	#array
	addi $s1, $a1, -1	#N-1
	
	addi $s2, $zero, 0 	#i
	
bouclei:
	blt $s1, $s2, boucleifin	# si i  < n-1, fin de la boucle
	
	addi $s4, $zero, 0		#j
	subu $s3, $s1, $s2		# n-i-1
	addi $s2, $s2, 1		#i++
	
	
bouclej:
	ble $s3,$s4, bouclejfin	#si j > n-i-1 fin de la boucle
	lh $t0, 0($a0)		#arr[j]
	lh $t1, 2($a0)		#arr[j+1]
	
	slt $t2, $t0, $t1	#tu ne fais pas le swap si arr[j] < arr[j+1]
	bne $t2, $zero, noSwap
	
	addi $a1, $a0, 2
	
	jal swap
	
	addi $a1, $a1, -2
	
noSwap:
	addiu $s4, $s4, 1		#j++
	addiu $a0, $a0, 2		#pour correspondre avec arr[j] et arr[j+1]
	j bouclej	

bouclejfin:
	
	sll $s4, $s4, 1
	sub $a0, $a0, $s4
	j bouclei

boucleifin:

	lw $s5, 20($sp)
	lw $s4, 16($sp)
	lw $s3, 12($sp)
	lw $s2, 8($sp)
	lw $s1, 4($sp)
	lw $ra, 0($sp)
	addiu, $sp, $sp, 24

	jr $ra




